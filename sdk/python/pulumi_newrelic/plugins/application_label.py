# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class ApplicationLabel(pulumi.CustomResource):
    category: pulumi.Output[str]
    """
    A string representing the label key/category.
    """
    links: pulumi.Output[list]
    """
    The resources to which label should be assigned to. At least one of the following attributes must be set.
    
      * `applications` (`list`) - An array of application IDs.
      * `servers` (`list`) - An array of server IDs.
    """
    name: pulumi.Output[str]
    """
    A string that will be assigned to the label.
    """
    def __init__(__self__, resource_name, opts=None, category=None, links=None, name=None, __props__=None, __name__=None, __opts__=None):
        """
        #### DEPRECATED! Use at your own risk. This feature may be removed in the next major release.
        Use this resource to create, update, and delete an Application label in New Relic.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] category: A string representing the label key/category.
        :param pulumi.Input[list] links: The resources to which label should be assigned to. At least one of the following attributes must be set.
        :param pulumi.Input[str] name: A string that will be assigned to the label.
        
        The **links** object supports the following:
        
          * `applications` (`pulumi.Input[list]`) - An array of application IDs.
          * `servers` (`pulumi.Input[list]`) - An array of server IDs.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-newrelic/blob/master/website/docs/r/application_label.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if category is None:
                raise TypeError("Missing required property 'category'")
            __props__['category'] = category
            if links is None:
                raise TypeError("Missing required property 'links'")
            __props__['links'] = links
            __props__['name'] = name
        super(ApplicationLabel, __self__).__init__(
            'newrelic:plugins/applicationLabel:ApplicationLabel',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, category=None, links=None, name=None):
        """
        Get an existing ApplicationLabel resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] category: A string representing the label key/category.
        :param pulumi.Input[list] links: The resources to which label should be assigned to. At least one of the following attributes must be set.
        :param pulumi.Input[str] name: A string that will be assigned to the label.
        
        The **links** object supports the following:
        
          * `applications` (`pulumi.Input[list]`) - An array of application IDs.
          * `servers` (`pulumi.Input[list]`) - An array of server IDs.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-newrelic/blob/master/website/docs/r/application_label.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["category"] = category
        __props__["links"] = links
        __props__["name"] = name
        return ApplicationLabel(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

