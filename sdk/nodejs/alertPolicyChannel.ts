// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as newrelic from "@pulumi/newrelic";
 * 
 * const fooAlertChannel = new newrelic.AlertChannel("foo", {
 *     configuration: {
 *         include_json_attachment: "1",
 *         recipients: "foo@example.com",
 *     },
 *     type: "email",
 * });
 * const fooAlertPolicy = new newrelic.AlertPolicy("foo", {});
 * const fooAlertPolicyChannel = new newrelic.AlertPolicyChannel("foo", {
 *     channelId: fooAlertChannel.id,
 *     policyId: fooAlertPolicy.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-newrelic/blob/master/website/docs/r/alert_policy_channel.html.markdown.
 */
export class AlertPolicyChannel extends pulumi.CustomResource {
    /**
     * Get an existing AlertPolicyChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlertPolicyChannelState, opts?: pulumi.CustomResourceOptions): AlertPolicyChannel {
        return new AlertPolicyChannel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'newrelic:index/alertPolicyChannel:AlertPolicyChannel';

    /**
     * Returns true if the given object is an instance of AlertPolicyChannel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlertPolicyChannel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlertPolicyChannel.__pulumiType;
    }

    /**
     * The ID of the channel.
     */
    public readonly channelId!: pulumi.Output<number>;
    /**
     * The ID of the policy.
     */
    public readonly policyId!: pulumi.Output<number>;

    /**
     * Create a AlertPolicyChannel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlertPolicyChannelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlertPolicyChannelArgs | AlertPolicyChannelState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as AlertPolicyChannelState | undefined;
            inputs["channelId"] = state ? state.channelId : undefined;
            inputs["policyId"] = state ? state.policyId : undefined;
        } else {
            const args = argsOrState as AlertPolicyChannelArgs | undefined;
            if (!args || args.channelId === undefined) {
                throw new Error("Missing required property 'channelId'");
            }
            if (!args || args.policyId === undefined) {
                throw new Error("Missing required property 'policyId'");
            }
            inputs["channelId"] = args ? args.channelId : undefined;
            inputs["policyId"] = args ? args.policyId : undefined;
        }
        super(AlertPolicyChannel.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AlertPolicyChannel resources.
 */
export interface AlertPolicyChannelState {
    /**
     * The ID of the channel.
     */
    readonly channelId?: pulumi.Input<number>;
    /**
     * The ID of the policy.
     */
    readonly policyId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AlertPolicyChannel resource.
 */
export interface AlertPolicyChannelArgs {
    /**
     * The ID of the channel.
     */
    readonly channelId: pulumi.Input<number>;
    /**
     * The ID of the policy.
     */
    readonly policyId: pulumi.Input<number>;
}
