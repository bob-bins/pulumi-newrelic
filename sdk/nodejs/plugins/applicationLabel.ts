// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * #### DEPRECATED! Use at your own risk. This feature may be removed in the next major release.
 * Use this resource to create, update, and delete an Application label in New Relic.
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-newrelic/blob/master/website/docs/r/application_label.html.markdown.
 */
export class ApplicationLabel extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationLabel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationLabelState, opts?: pulumi.CustomResourceOptions): ApplicationLabel {
        return new ApplicationLabel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'newrelic:plugins/applicationLabel:ApplicationLabel';

    /**
     * Returns true if the given object is an instance of ApplicationLabel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationLabel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationLabel.__pulumiType;
    }

    /**
     * A string representing the label key/category.
     */
    public readonly category!: pulumi.Output<string>;
    /**
     * The resources to which label should be assigned to. At least one of the following attributes must be set.
     */
    public readonly links!: pulumi.Output<outputs.plugins.ApplicationLabelLink[]>;
    /**
     * A string that will be assigned to the label.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a ApplicationLabel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationLabelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationLabelArgs | ApplicationLabelState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ApplicationLabelState | undefined;
            inputs["category"] = state ? state.category : undefined;
            inputs["links"] = state ? state.links : undefined;
            inputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as ApplicationLabelArgs | undefined;
            if (!args || args.category === undefined) {
                throw new Error("Missing required property 'category'");
            }
            if (!args || args.links === undefined) {
                throw new Error("Missing required property 'links'");
            }
            inputs["category"] = args ? args.category : undefined;
            inputs["links"] = args ? args.links : undefined;
            inputs["name"] = args ? args.name : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ApplicationLabel.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApplicationLabel resources.
 */
export interface ApplicationLabelState {
    /**
     * A string representing the label key/category.
     */
    readonly category?: pulumi.Input<string>;
    /**
     * The resources to which label should be assigned to. At least one of the following attributes must be set.
     */
    readonly links?: pulumi.Input<pulumi.Input<inputs.plugins.ApplicationLabelLink>[]>;
    /**
     * A string that will be assigned to the label.
     */
    readonly name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApplicationLabel resource.
 */
export interface ApplicationLabelArgs {
    /**
     * A string representing the label key/category.
     */
    readonly category: pulumi.Input<string>;
    /**
     * The resources to which label should be assigned to. At least one of the following attributes must be set.
     */
    readonly links: pulumi.Input<pulumi.Input<inputs.plugins.ApplicationLabelLink>[]>;
    /**
     * A string that will be assigned to the label.
     */
    readonly name?: pulumi.Input<string>;
}
