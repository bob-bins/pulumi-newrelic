// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to get information about a specific Synthetics secure credential in New Relic that already exists.
 * 
 * Note that the secure credential's value is not returned as an attribute for security reasons.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as newrelic from "@pulumi/newrelic";
 * 
 * const foo = newrelic.plugins.getSyntheticsSecureCredential({
 *     key: "MY_KEY",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-newrelic/blob/master/website/docs/d/synthetics_secure_credential.html.markdown.
 */
export function getSyntheticsSecureCredential(args: GetSyntheticsSecureCredentialArgs, opts?: pulumi.InvokeOptions): Promise<GetSyntheticsSecureCredentialResult> & GetSyntheticsSecureCredentialResult {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise: Promise<GetSyntheticsSecureCredentialResult> = pulumi.runtime.invoke("newrelic:plugins/getSyntheticsSecureCredential:getSyntheticsSecureCredential", {
        "key": args.key,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getSyntheticsSecureCredential.
 */
export interface GetSyntheticsSecureCredentialArgs {
    /**
     * The secure credential's key name.  Regardless of the case used in the configuration, the provider will provide an upcased key to the underlying API.
     */
    readonly key: string;
}

/**
 * A collection of values returned by getSyntheticsSecureCredential.
 */
export interface GetSyntheticsSecureCredentialResult {
    /**
     * The time the secure credential was created.
     */
    readonly createdAt: string;
    /**
     * The secure credential's description.
     */
    readonly description: string;
    readonly key: string;
    readonly lastUpdated: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
