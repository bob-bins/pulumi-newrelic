// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";

export interface AlertConditionTerm {
    duration: number;
    operator?: string;
    priority?: string;
    threshold: number;
    timeFunction: string;
}

export interface DashboardFilter {
    attributes?: string[];
    eventTypes: string[];
}

export interface DashboardWidget {
    column: number;
    compareWiths?: outputs.DashboardWidgetCompareWith[];
    drilldownDashboardId?: number;
    duration?: number;
    endTime?: number;
    entityIds?: number[];
    facet?: string;
    height?: number;
    limit?: number;
    metrics?: outputs.DashboardWidgetMetric[];
    notes?: string;
    nrql?: string;
    orderBy?: string;
    rawMetricName: string;
    row: number;
    source?: string;
    thresholdRed?: number;
    thresholdYellow?: number;
    /**
     * The title of the dashboard.
     */
    title: string;
    visualization: string;
    widgetId: number;
    width?: number;
}

export interface DashboardWidgetCompareWith {
    offsetDuration: string;
    presentation: outputs.DashboardWidgetCompareWithPresentation;
}

export interface DashboardWidgetCompareWithPresentation {
    color: string;
    name: string;
}

export interface DashboardWidgetMetric {
    name: string;
    scope?: string;
    units?: string;
    values?: string[];
}

export interface InfraAlertConditionCritical {
    duration: number;
    timeFunction?: string;
    value?: number;
}

export interface InfraAlertConditionWarning {
    duration: number;
    timeFunction?: string;
    value?: number;
}

export interface NrqlAlertConditionNrql {
    query: string;
    sinceValue: string;
}

export interface NrqlAlertConditionTerm {
    duration: number;
    operator?: string;
    priority?: string;
    threshold: number;
    timeFunction: string;
}

export namespace insights {
    export interface EventEvent {
        attributes: outputs.insights.EventEventAttribute[];
        timestamp?: number;
        type: string;
    }

    export interface EventEventAttribute {
        key: string;
        type?: string;
        value: string;
    }
}

export namespace plugins {
    export interface AlertConditionTerm {
        duration: number;
        operator?: string;
        priority?: string;
        threshold: number;
        timeFunction: string;
    }
}
