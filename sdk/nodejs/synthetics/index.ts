// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./alertCondition";
export * from "./getMonitor";
export * from "./getMonitorLocation";
export * from "./getSecureCredential";
export * from "./monitor";
export * from "./monitorScript";
export * from "./multiLocationAlertCondition";
export * from "./secureCredential";

// Import resources to register:
import { AlertCondition } from "./alertCondition";
import { Monitor } from "./monitor";
import { MonitorScript } from "./monitorScript";
import { MultiLocationAlertCondition } from "./multiLocationAlertCondition";
import { SecureCredential } from "./secureCredential";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "newrelic:synthetics/alertCondition:AlertCondition":
                return new AlertCondition(name, <any>undefined, { urn })
            case "newrelic:synthetics/monitor:Monitor":
                return new Monitor(name, <any>undefined, { urn })
            case "newrelic:synthetics/monitorScript:MonitorScript":
                return new MonitorScript(name, <any>undefined, { urn })
            case "newrelic:synthetics/multiLocationAlertCondition:MultiLocationAlertCondition":
                return new MultiLocationAlertCondition(name, <any>undefined, { urn })
            case "newrelic:synthetics/secureCredential:SecureCredential":
                return new SecureCredential(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("newrelic", "synthetics/alertCondition", _module)
pulumi.runtime.registerResourceModule("newrelic", "synthetics/monitor", _module)
pulumi.runtime.registerResourceModule("newrelic", "synthetics/monitorScript", _module)
pulumi.runtime.registerResourceModule("newrelic", "synthetics/multiLocationAlertCondition", _module)
pulumi.runtime.registerResourceModule("newrelic", "synthetics/secureCredential", _module)
