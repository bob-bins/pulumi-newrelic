// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Dashboard extends pulumi.CustomResource {
    /**
     * Get an existing Dashboard resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DashboardState, opts?: pulumi.CustomResourceOptions): Dashboard {
        return new Dashboard(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'newrelic:index/dashboard:Dashboard';

    /**
     * Returns true if the given object is an instance of Dashboard.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Dashboard {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Dashboard.__pulumiType;
    }

    public /*out*/ readonly dashboardUrl!: pulumi.Output<string>;
    /**
     * Who can edit the dashboard in an account. Must be `read_only`, `editable_by_owner`, `editable_by_all`, or `all`. Defaults to `editable_by_all`.
     */
    public readonly editable!: pulumi.Output<string | undefined>;
    public readonly filter!: pulumi.Output<{ attributes?: string[], eventTypes: string[] } | undefined>;
    /**
     * The icon for the dashboard.  Defaults to `bar-chart`.
     */
    public readonly icon!: pulumi.Output<string | undefined>;
    /**
     * The title of the dashboard.
     */
    public readonly title!: pulumi.Output<string>;
    /**
     * Who can see the dashboard in an account. Must be `owner` or `all`. Defaults to `all`.
     */
    public readonly visibility!: pulumi.Output<string | undefined>;
    /**
     * A widget that describes a visualization. See Widgets below for details.
     */
    public readonly widgets!: pulumi.Output<{ column: number, height?: number, notes?: string, nrql?: string, row: number, title: string, visualization: string, width?: number }[] | undefined>;

    /**
     * Create a Dashboard resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DashboardArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DashboardArgs | DashboardState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as DashboardState | undefined;
            inputs["dashboardUrl"] = state ? state.dashboardUrl : undefined;
            inputs["editable"] = state ? state.editable : undefined;
            inputs["filter"] = state ? state.filter : undefined;
            inputs["icon"] = state ? state.icon : undefined;
            inputs["title"] = state ? state.title : undefined;
            inputs["visibility"] = state ? state.visibility : undefined;
            inputs["widgets"] = state ? state.widgets : undefined;
        } else {
            const args = argsOrState as DashboardArgs | undefined;
            if (!args || args.title === undefined) {
                throw new Error("Missing required property 'title'");
            }
            inputs["editable"] = args ? args.editable : undefined;
            inputs["filter"] = args ? args.filter : undefined;
            inputs["icon"] = args ? args.icon : undefined;
            inputs["title"] = args ? args.title : undefined;
            inputs["visibility"] = args ? args.visibility : undefined;
            inputs["widgets"] = args ? args.widgets : undefined;
            inputs["dashboardUrl"] = undefined /*out*/;
        }
        super(Dashboard.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Dashboard resources.
 */
export interface DashboardState {
    readonly dashboardUrl?: pulumi.Input<string>;
    /**
     * Who can edit the dashboard in an account. Must be `read_only`, `editable_by_owner`, `editable_by_all`, or `all`. Defaults to `editable_by_all`.
     */
    readonly editable?: pulumi.Input<string>;
    readonly filter?: pulumi.Input<{ attributes?: pulumi.Input<pulumi.Input<string>[]>, eventTypes: pulumi.Input<pulumi.Input<string>[]> }>;
    /**
     * The icon for the dashboard.  Defaults to `bar-chart`.
     */
    readonly icon?: pulumi.Input<string>;
    /**
     * The title of the dashboard.
     */
    readonly title?: pulumi.Input<string>;
    /**
     * Who can see the dashboard in an account. Must be `owner` or `all`. Defaults to `all`.
     */
    readonly visibility?: pulumi.Input<string>;
    /**
     * A widget that describes a visualization. See Widgets below for details.
     */
    readonly widgets?: pulumi.Input<pulumi.Input<{ column: pulumi.Input<number>, height?: pulumi.Input<number>, notes?: pulumi.Input<string>, nrql?: pulumi.Input<string>, row: pulumi.Input<number>, title: pulumi.Input<string>, visualization: pulumi.Input<string>, width?: pulumi.Input<number> }>[]>;
}

/**
 * The set of arguments for constructing a Dashboard resource.
 */
export interface DashboardArgs {
    /**
     * Who can edit the dashboard in an account. Must be `read_only`, `editable_by_owner`, `editable_by_all`, or `all`. Defaults to `editable_by_all`.
     */
    readonly editable?: pulumi.Input<string>;
    readonly filter?: pulumi.Input<{ attributes?: pulumi.Input<pulumi.Input<string>[]>, eventTypes: pulumi.Input<pulumi.Input<string>[]> }>;
    /**
     * The icon for the dashboard.  Defaults to `bar-chart`.
     */
    readonly icon?: pulumi.Input<string>;
    /**
     * The title of the dashboard.
     */
    readonly title: pulumi.Input<string>;
    /**
     * Who can see the dashboard in an account. Must be `owner` or `all`. Defaults to `all`.
     */
    readonly visibility?: pulumi.Input<string>;
    /**
     * A widget that describes a visualization. See Widgets below for details.
     */
    readonly widgets?: pulumi.Input<pulumi.Input<{ column: pulumi.Input<number>, height?: pulumi.Input<number>, notes?: pulumi.Input<string>, nrql?: pulumi.Input<string>, row: pulumi.Input<number>, title: pulumi.Input<string>, visualization: pulumi.Input<string>, width?: pulumi.Input<number> }>[]>;
}
