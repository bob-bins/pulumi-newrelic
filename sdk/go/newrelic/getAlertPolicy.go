// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package newrelic

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to get information about an specific alert policy in New Relic which already exists.
func LookupAlertPolicy(ctx *pulumi.Context, args *GetAlertPolicyArgs) (*GetAlertPolicyResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["incidentPreference"] = args.IncidentPreference
		inputs["name"] = args.Name
	}
	outputs, err := ctx.Invoke("newrelic:index/getAlertPolicy:getAlertPolicy", inputs)
	if err != nil {
		return nil, err
	}
	return &GetAlertPolicyResult{
		CreatedAt: outputs["createdAt"],
		IncidentPreference: outputs["incidentPreference"],
		Name: outputs["name"],
		UpdatedAt: outputs["updatedAt"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getAlertPolicy.
type GetAlertPolicyArgs struct {
	IncidentPreference interface{}
	// The name of the alert policy in New Relic.
	Name interface{}
}

// A collection of values returned by getAlertPolicy.
type GetAlertPolicyResult struct {
	// The time the policy was created.
	CreatedAt interface{}
	// The rollup strategy for the policy. Options include: PER_POLICY, PER_CONDITION, or PER_CONDITION_AND_TARGET. The default is PER_POLICY.
	IncidentPreference interface{}
	Name interface{}
	// The time the policy was last updated.
	UpdatedAt interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
